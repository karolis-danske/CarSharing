// <auto-generated />
using System;
using Integartion.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Integration.Migrations
{
    [DbContext(typeof(CarSharingContext))]
    [Migration("20180906132402_initial-migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Integartion.Database.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = "UserVeryUniqueGuid1", CarId = "CarVeryUniqueGuid", Name = "Domas Sostronk", PhoneNumber = "86656911" },
                        new { Id = "UserVeryUniqueGuid2", Name = "Alisa Selezniova", PhoneNumber = "864001010" }
                    );
                });

            modelBuilder.Entity("Integration.Database.Car", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Number")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new { Id = "CarVeryUniqueGuid", Number = "YAU123" }
                    );
                });

            modelBuilder.Entity("Integration.Database.Passenger", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PassengerUserId");

                    b.Property<string>("TravelId");

                    b.HasKey("Id");

                    b.HasIndex("PassengerUserId");

                    b.HasIndex("TravelId");

                    b.ToTable("Passangers");

                    b.HasData(
                        new { Id = "PassengerVeryUniqueGuid", PassengerUserId = "UserVeryUniqueGuid2", TravelId = "TravelVeryUniqueGuid" }
                    );
                });

            modelBuilder.Entity("Integration.Database.Travel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("DepartureTime");

                    b.Property<string>("Destination");

                    b.Property<string>("DriverUserId");

                    b.Property<string>("Origin");

                    b.HasKey("Id");

                    b.HasIndex("DriverUserId");

                    b.ToTable("Travels");

                    b.HasData(
                        new { Id = "TravelVeryUniqueGuid", DepartureTime = new DateTimeOffset(new DateTime(2018, 9, 28, 9, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)), Destination = "54.700690, 25.261981", DriverUserId = "UserVeryUniqueGuid1", Origin = "54.670396, 25.284133" }
                    );
                });

            modelBuilder.Entity("Integartion.Database.User", b =>
                {
                    b.HasOne("Integration.Database.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");
                });

            modelBuilder.Entity("Integration.Database.Passenger", b =>
                {
                    b.HasOne("Integartion.Database.User", "PassengerUser")
                        .WithMany("Passangers")
                        .HasForeignKey("PassengerUserId");

                    b.HasOne("Integration.Database.Travel", "Travel")
                        .WithMany("Passengers")
                        .HasForeignKey("TravelId");
                });

            modelBuilder.Entity("Integration.Database.Travel", b =>
                {
                    b.HasOne("Integartion.Database.User", "DriverUser")
                        .WithMany("Travels")
                        .HasForeignKey("DriverUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
